function mergeSort(arr) {
  if (arr.length <= 1) {
    return arr;
  }

  // 배열을 반으로 나누기
  const middle = Math.floor(arr.length / 2);
  const left = arr.slice(0, middle);
  const right = arr.slice(middle);

  // 나뉜 배열을 재귀적으로 정렬
  const leftSorted = mergeSort(left);
  const rightSorted = mergeSort(right);

  // 정렬된 배열 병합
  return merge(leftSorted, rightSorted);
}

function merge(left, right) {
  let result = [];
  let leftIndex = 0;
  let rightIndex = 0;

  // 두 배열을 비교하여 정렬된 배열 생성
  while (leftIndex < left.length && rightIndex < right.length) {
    if (left[leftIndex] < right[rightIndex]) {
      result.push(left[leftIndex]);
      leftIndex++;
    } else {
      result.push(right[rightIndex]);
      rightIndex++;
    }
  }

  // 남은 요소들 처리
  return result.concat(left.slice(leftIndex), right.slice(rightIndex));
}

// 테스트
const unsortedArray = [64, 34, 25, 12, 22, 11, 90];
const sortedArray = mergeSort(unsortedArray.slice());

console.log("Unsorted Array:", unsortedArray);
console.log("Sorted Array:", sortedArray);
