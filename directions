const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

const directions = [
  { dr: 0, dc: 1 }, // 동쪽
  { dr: 0, dc: -1 }, // 서쪽
  { dr: -1, dc: 0 }, // 북쪽
  { dr: 1, dc: 0 }, // 남쪽
];

let N, M, x, y, K;
let map = [];
let dice = [0, 0, 0, 0, 0, 0, 0]; // 주사위의 각 면의 값

function rollDice(direction) {
  const tempDice = [...dice];
  if (direction === 1) {
    // 동쪽
    dice[0] = tempDice[3];
    dice[2] = tempDice[0];
    dice[3] = tempDice[5];
    dice[5] = tempDice[2];
  } else if (direction === 2) {
    // 서쪽
    dice[0] = tempDice[2];
    dice[2] = tempDice[5];
    dice[3] = tempDice[0];
    dice[5] = tempDice[3];
  } else if (direction === 3) {
    // 북쪽
    dice[0] = tempDice[4];
    dice[1] = tempDice[0];
    dice[4] = tempDice[5];
    dice[5] = tempDice[1];
  } else {
    // 남쪽
    dice[0] = tempDice[1];
    dice[1] = tempDice[5];
    dice[4] = tempDice[0];
    dice[5] = tempDice[4];
  }
}

function simulateDice(commands) {
  for (const command of commands) {
    const nextX = x + directions[command - 1].dr;
    const nextY = y + directions[command - 1].dc;

    if (nextX < 0 || nextX >= N || nextY < 0 || nextY >= M) {
      // 바깥으로 이동하는 경우 무시
      continue;
    }

    x = nextX;
    y = nextY;

    rollDice(command);

    if (map[x][y] === 0) {
      // 이동한 칸에 쓰여 있는 수가 0이면 주사위의 바닥면 값이 복사됨
      map[x][y] = dice[5];
    } else {
      // 0이 아닌 경우 주사위의 바닥면에 칸에 쓰여 있는 수가 복사되고, 칸은 0이 됨
      dice[5] = map[x][y];
      map[x][y] = 0;
    }

    // 주사위의 윗 면에 쓰여 있는 수 출력
    console.log(dice[0]);
  }
}

function init() {
  rl.question('', (answer) => {
    [N, M, x, y, K] = answer.split(' ').map(Number);

    rl.on('line', (line) => {
      map.push(line.split(' ').map(Number));
      if (map.length === N) {
        rl.close();
      }
    });
  });

  rl.on('close', () => {
    const commands = [];

    rl.on('line', (line) => {
      commands.push(Number(line));
      if (commands.length === K) {
        simulateDice(commands);
      }
    });
  });
}

init();
